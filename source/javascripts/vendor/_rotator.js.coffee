### ===========================================================
# jquery-simple-text-rotator.js v1
# ===========================================================
# Copyright 2013 Pete Rojwongsuriya.
# http://www.thepetedesign.com
#
# A very simple and light weight jQuery plugin that
# allows you to rotate multiple text without changing
# the layout
# https://github.com/peachananr/simple-text-rotator
#
# ==========================================================
###

$(document).ready ->
  $('.rotate').textrotator
    animation: 'fade'
    speed: 1000
  $('.flip').textrotator
    animation: 'flip'
    speed: 1250
  $('.flipCube').textrotator
    animation: 'flipCube'
    speed: 1500
  $('.flipUp').textrotator
    animation: 'flipUp'
    speed: 1750
  $('.spin').textrotator
    animation: 'dissolve'
    speed: 2000
  return

# ---
# generated by js2coffee 2.1.0

!(($) ->
  defaults =
    animation: 'dissolve'
    separator: ','
    speed: 2000

  $.fx.step.textShadowBlur = (fx) ->
    $(fx.elem).prop('textShadowBlur', fx.now).css textShadow: '0 0 ' + Math.floor(fx.now) + 'px black'
    return

  $.fn.textrotator = (options) ->
    settings = $.extend({}, defaults, options)
    @each ->
      el = $(this)
      array = []
      $.each el.text().split(settings.separator), (key, value) ->
        array.push value
        return
      el.text array[0]
      # animation option

      rotate = ->
        switch settings.animation
          when 'dissolve'
            el.animate {
              textShadowBlur: 20
              opacity: 0
            }, 500, ->
              `var index`
              `var initial`
              `var index`
              `var initial`
              `var index`
              `var initial`
              index = $.inArray(el.text(), array)
              if index + 1 == array.length
                index = -1
              el.text(array[index + 1]).animate {
                textShadowBlur: 0
                opacity: 1
              }, 500
              return
          when 'flip'
            if el.find('.back').length > 0
              el.html el.find('.back').html()
            initial = el.text()
            index = $.inArray(initial, array)
            if index + 1 == array.length
              index = -1
            el.html ''
            $('<span class=\'front\'>' + initial + '</span>').appendTo el
            $('<span class=\'back\'>' + array[index + 1] + '</span>').appendTo el
            el.wrapInner('<span class=\'rotating\' />').find('.rotating').hide().addClass('flip').show().css
              '-webkit-transform': ' rotateY(-180deg)'
              '-moz-transform': ' rotateY(-180deg)'
              '-o-transform': ' rotateY(-180deg)'
              'transform': ' rotateY(-180deg)'
          when 'flipUp'
            if el.find('.back').length > 0
              el.html el.find('.back').html()
            initial = el.text()
            index = $.inArray(initial, array)
            if index + 1 == array.length
              index = -1
            el.html ''
            $('<span class=\'front\'>' + initial + '</span>').appendTo el
            $('<span class=\'back\'>' + array[index + 1] + '</span>').appendTo el
            el.wrapInner('<span class=\'rotating\' />').find('.rotating').hide().addClass('flip up').show().css
              '-webkit-transform': ' rotateX(-180deg)'
              '-moz-transform': ' rotateX(-180deg)'
              '-o-transform': ' rotateX(-180deg)'
              'transform': ' rotateX(-180deg)'
          when 'flipCube'
            if el.find('.back').length > 0
              el.html el.find('.back').html()
            initial = el.text()
            index = $.inArray(initial, array)
            if index + 1 == array.length
              index = -1
            el.html ''
            $('<span class=\'front\'>' + initial + '</span>').appendTo el
            $('<span class=\'back\'>' + array[index + 1] + '</span>').appendTo el
            el.wrapInner('<span class=\'rotating\' />').find('.rotating').hide().addClass('flip cube').show().css
              '-webkit-transform': ' rotateY(180deg)'
              '-moz-transform': ' rotateY(180deg)'
              '-o-transform': ' rotateY(180deg)'
              'transform': ' rotateY(180deg)'
          when 'flipCubeUp'
            if el.find('.back').length > 0
              el.html el.find('.back').html()
            initial = el.text()
            index = $.inArray(initial, array)
            if index + 1 == array.length
              index = -1
            el.html ''
            $('<span class=\'front\'>' + initial + '</span>').appendTo el
            $('<span class=\'back\'>' + array[index + 1] + '</span>').appendTo el
            el.wrapInner('<span class=\'rotating\' />').find('.rotating').hide().addClass('flip cube up').show().css
              '-webkit-transform': ' rotateX(180deg)'
              '-moz-transform': ' rotateX(180deg)'
              '-o-transform': ' rotateX(180deg)'
              'transform': ' rotateX(180deg)'
          when 'spin'
            if el.find('.rotating').length > 0
              el.html el.find('.rotating').html()
            index = $.inArray(el.text(), array)
            if index + 1 == array.length
              index = -1
            el.wrapInner('<span class=\'rotating spin\' />').find('.rotating').hide().text(array[index + 1]).show().css
              '-webkit-transform': ' rotate(0) scale(1)'
              '-moz-transform': 'rotate(0) scale(1)'
              '-o-transform': 'rotate(0) scale(1)'
              'transform': 'rotate(0) scale(1)'
          when 'fade'
            el.fadeOut settings.speed, ->
              index = $.inArray(el.text(), array)
              if index + 1 == array.length
                index = -1
              el.text(array[index + 1]).fadeIn settings.speed
              return
        return

      setInterval rotate, settings.speed
      return

  return
)(window.jQuery)

# ---
# generated by js2coffee 2.1.0

###*
# Placeholdem - Placeholder Caret Animation
# v1.0.2 - MIT License
# http://placeholdem.jackrugile.com - git://github.com/jackrugile/placeholdem.git
# by Jack Rugile - @jackrugile
###

Placeholdem = (e) ->
  'use strict'
  !do ->
    `var e`
    e = 0
    t = [
      'ms'
      'moz'
      'webkit'
      'o'
    ]
    n = 0
    while n < t.length and !window.requestAnimationFrame
      window.requestAnimationFrame = window[t[n] + 'RequestAnimationFrame']
      window.cancelAnimationFrame = window[t[n] + 'CancelAnimationFrame'] or window[t[n] + 'CancelRequestAnimationFrame']
      ++n
    window.requestAnimationFrame or
    (window.requestAnimationFrame = (t) ->
      `var n`
      n = (new Date).getTime()
      a = Math.max(0, 16 - (n - e))
      l = window.setTimeout((->
        t n + a
        return
      ), a)
      e = n + a
      l
    )

    window.cancelAnimationFrame or
    (window.cancelAnimationFrame = (e) ->
      clearTimeout e
      return
    )

    return
  t = {}
  t.customElems = [ 'password' ]
  t.defaultInputAttributeName = 'data-defaultinputtype'

  t.init = ->
    if t.elems = []
      e and e.length

      n = 0
      while n < e.length
        t.hasPlaceholder(e[n]) and t.elems.push(new (t.PlaceholdemElem)(e[n]))
        n++
    else
      e and t.hasPlaceholder(e) and t.elems.push(new (t.PlaceholdemElem)(e))
    return

t.hasPlaceholder = (e) ->
    'function' == typeof e.hasAttribute and e.hasAttribute('placeholder')

t.PlaceholdemElem = (e) ->
    n = this

    n.init = ->
      n.elem = e
      n.form = e.form
      n.placeholder = n.elem.getAttribute('placeholder')
      n.elem.removeAttribute('placeholder')
      n.rAF = null
      n.animating = 0
      n.defaultInputType = n.elem.getAttribute('type')
      n.resetDefaultType()
      n.elem.value or (n.elem.value = n.placeholder)
      n.on(n.elem, 'focus', n.onFocus)
      n.on(n.elem, 'blur', n.onBlur)
      n.on(n.elem, 'keydown', n.onKeydown)
      n.form and n.on(n.form, 'reset', n.onReset)
      return

n.on = (e, t, n) ->
      if e.addEventListener then e.addEventListener(t, n) else e.attachEvent('on' + t, n)
      return

n.onFocus = ->
      (n.animating or n.elem.value == n.placeholder) and n.animating = 1
      window.cancelAnimationFrame(n.rAF)
      n.deletePlaceholder()
      n.restoreDefaultType()
      return

n.onBlur = ->
      (n.animating or '' == n.elem.value) and n.animating = 1
      window.cancelAnimationFrame(n.rAF)
      n.restorePlaceholder()
      n.resetDefaultType()
      return

n.onKeydown = ->
      n.animating and n.animating = 0
      window.cancelAnimationFrame(n.rAF)
      n.elem.value = ''
      return

n.onReset = ->
      setTimeout ->
        n.onBlur()
        return
      return

n.deletePlaceholder = ->
      if n.elem.value.length > 0 then n.elem.value = n.elem.value.slice(0, -1)
      n.rAF = window.requestAnimationFrame(n.deletePlaceholder)
 else (n.animating = 0)
      return

n.restorePlaceholder = ->
      if n.elem.value.length < n.placeholder.length then n.elem.value += n.placeholder[n.elem.value.length]
      n.rAF = window.requestAnimationFrame(n.restorePlaceholder)
 else (n.animating = 0)
      return

n.restoreDefaultType = ->
      `var e`
      e = n.elem.getAttribute(t.defaultInputAttributeName)
      e and -1 != t.customElems.indexOf(e) and e != n.elem.getAttribute('type') and n.elem.setAttribute('type', e)
      return

n.resetDefaultType = ->
      -1 != t.customElems.indexOf(n.defaultInputType) and n.elem.setAttribute(t.defaultInputAttributeName, n.defaultInputType)
      n.elem.setAttribute('type', 'text')
      return

n.init()
    return

t.init()
  t

# ---
# generated by js2coffee 2.1.0
